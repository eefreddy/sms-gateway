= SMS Gateway

The SMS Gateway gem provides a simple and extensible interface for
various SMS Gateways. It is loosely oriented on Action Mailer. The
gem allows you to create a SMS and deliver it synchronously or
asynchronously. So far it only ships with the following adapters.

* smsglobal.com
* a dummy adapter for testing purposes


= Installation

You install the gem in your rails app by adding it your +Gemfile+:

    gem "sms_gateway"


After that you run the <tt>bundle:install</tt> task and then invoke the
gem's generator:

    rails g sms_gateway:install

The generator installs an initializer and a yml file which you will need
to configure before sending a SMS.


== Resque and Redis

To deliver SMS asynchronously this gem makes use of resque, a
popular queing system basd on the key-value data store redis. You need
to have a working resque and redis setup if you want to use
the aynchronous feature. For more information on resque visit
https://github.com/defunkt/resque.


= Usage

Similar to action mailer you create the message object first:

    m = SmsGateway::Sms.new(:from => '493088888888, :to => '49309999999',
          :text => 'my sms must not be longer than 160 characters.')    


And then deliver it with:    

    m.deliver


This will block until the the HTTP call is complete. As with email it's
better practice to enqueue the call: 

    m.deliver_later

This will be non-blocking and is the recommended way of sending an SMS.
This requires a resque worker, though, to get actually sent (see the
resque documentation):

    rake resque:work



= Outlook and Todo

So far the gem is pretty limited. Ideas for following version are:

* unit tests
* other sms gateway providers
* decoupling of resque

= License

GPLv3. Copyright 2011 Kai Rubarth.  



